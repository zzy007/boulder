language: go
dist: xenial
os: linux

go:
  - "1.15"

go_import_path: github.com/letsencrypt/boulder

services:
  - docker

# Only build pushes to the main branch, PRs, and branches beginning with
# `test-`. You should not push branches beginning with `test-` to the
# letsencrypt repository, but this is a convenient way to push branches to your
# own fork of the repository to ensure Travis passes before submitting a PR.
# For instance, you might run:
# git push myremote branchname:test-branchname
branches:
  only:
    - main
    - /^test-.*$/

env:
    - RUN="lints integration generate rpm" BOULDER_CONFIG_DIR="test/config"
    # Config changes that have landed in main but not yet been applied to
    # production can be made in boulder-config-next.json.
    - RUN="integration" BOULDER_CONFIG_DIR="test/config-next"
    - RUN="unit"
    - RUN="unit-next" BOULDER_CONFIG_DIR="test/config-next"
    - RUN="start" BOULDER_CONFIG_DIR="test/config"
    # gomod-vendor runs with a separate container because it needs to fetch
    # packages from GitHub et. al., which is incompatible with the DNS server
    # override in the boulder container (used for service discovery).
    - RUN="gomod-vendor" CONTAINER="netaccess"
    - RUN="coverage" CONTAINER="netaccess"

jobs:
  fast_finish: true
  allow_failures:
    - env: RUN="coverage" CONTAINER="netaccess"

install:
  - docker-compose pull

script:
  - >-
    docker-compose run --use-aliases
    -e BOULDER_CONFIG_DIR
    -e RUN
    -e TRAVIS_BRANCH
    -e TRAVIS_JOB_ID
    -e TRAVIS_PULL_REQUEST
    -e COVERALLS_TOKEN
    ${CONTAINER:-boulder} ./test.sh
